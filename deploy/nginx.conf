user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format
    log_format no_ip '- $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    # Cache settings
    proxy_cache_path /var/cache/nginx/ levels=1:2 keys_zone=ahmia_cache:10m max_size=1g inactive=600m;
    proxy_cache_key $host$uri$is_args$args;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=front_limit_per_ip:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=query_limit_per_ip:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=lists_limit_per_ip:10m rate=3r/m;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip settings
    gzip on;
    gzip_disable msie6;
    gzip_static on;
    gzip_comp_level 4;
    gzip_proxied any;
    gzip_types text/plain
               text/css
               application/x-javascript
               text/xml
               application/xml
               application/xml+rss
               text/javascript;

    # Access and error logs
    access_log /var/log/nginx/access.log no_ip;
    error_log /var/log/nginx/error.log;

    # Default server block
    server {
        listen 80;
        
        # For Azure deployment, use HTTP initially
        # For production, you should enable SSL
        # return 301 https://$host$request_uri;
        
        charset utf-8;
        client_max_body_size 75M;

        # Add HSTS, X-Frame-Options, etc. for security
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # Static files
        location /static/ {
            alias /app/ahmia/staticfiles/;
            expires 30d;
            try_files $uri $uri/ =404;
        }

        # Django WSGI Server
        location / {
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_pass http://127.0.0.1:8000;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache settings
            proxy_cache ahmia_cache;
            proxy_cache_min_uses 1;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 301 302 60m;
            proxy_cache_valid 404 500 10m;
            proxy_cache_valid any 10m;
        }

        # Bypass cache for /add/ URLs
        location ~* ^/add/ {
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_pass http://127.0.0.1:8000;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # No caching for add URLs
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }
    }

    # HTTPS server - uncomment and configure for production
    # server {
    #     listen 443 ssl;
    #     
    #     ssl_certificate /etc/ssl/private/fullchain.pem;
    #     ssl_certificate_key /etc/ssl/private/privkey.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     
    #     # ... same locations as the HTTP server ...
    # }
}
